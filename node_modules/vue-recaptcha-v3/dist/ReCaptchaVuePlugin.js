"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.useReCaptcha = exports.VueReCaptcha = void 0;
var recaptcha_v3_1 = require("recaptcha-v3");
var vue_1 = require("vue");
var VueReCaptchaInjectKey = Symbol('VueReCaptchaInjectKey');
var globalConfig = {
    loadedWaiters: [],
    error: null
};
exports.VueReCaptcha = {
    install: function (app, options) {
        var isLoaded = vue_1.ref(false);
        var instance = vue_1.ref(undefined);
        app.config.globalProperties.$recaptchaLoaded = recaptchaLoaded(isLoaded);
        initializeReCaptcha(options).then(function (wrapper) {
            isLoaded.value = true;
            instance.value = wrapper;
            app.config.globalProperties.$recaptcha = recaptcha(instance);
            app.config.globalProperties.$recaptchaInstance = instance;
            globalConfig.loadedWaiters.forEach(function (v) { return v.resolve(true); });
        }).catch(function (error) {
            globalConfig.error = error;
            globalConfig.loadedWaiters.forEach(function (v) { return v.reject(error); });
        });
        app.provide(VueReCaptchaInjectKey, {
            instance: instance,
            isLoaded: isLoaded,
            executeRecaptcha: recaptcha(instance),
            recaptchaLoaded: recaptchaLoaded(isLoaded)
        });
    }
};
function useReCaptcha() {
    return vue_1.inject(VueReCaptchaInjectKey);
}
exports.useReCaptcha = useReCaptcha;
function initializeReCaptcha(options) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4, recaptcha_v3_1.load(options.siteKey, options.loaderOptions)];
                case 1: return [2, _a.sent()];
            }
        });
    });
}
function recaptchaLoaded(isLoaded) {
    return function () { return new Promise(function (resolve, reject) {
        if (globalConfig.error !== null) {
            return reject(globalConfig.error);
        }
        if (isLoaded.value) {
            return resolve(true);
        }
        globalConfig.loadedWaiters.push({ resolve: resolve, reject: reject });
    }); };
}
function recaptcha(instance) {
    var _this = this;
    return function (action) { return __awaiter(_this, void 0, void 0, function () {
        var _a;
        return __generator(this, function (_b) {
            switch (_b.label) {
                case 0: return [4, ((_a = instance.value) === null || _a === void 0 ? void 0 : _a.execute(action))];
                case 1: return [2, _b.sent()];
            }
        });
    }); };
}
